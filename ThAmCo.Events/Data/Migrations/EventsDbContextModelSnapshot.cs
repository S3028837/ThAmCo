// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Events.Data;

#nullable disable

namespace ThAmCo.Events.Data.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    partial class EventsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FoodBookingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReservationReference")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            EventDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "New Year's Eve Gala",
                            EventType = "Celebration",
                            FoodBookingId = 1,
                            ReservationReference = "1"
                        },
                        new
                        {
                            EventId = 2,
                            EventDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Corporate Retreat",
                            EventType = "Business",
                            FoodBookingId = 2,
                            ReservationReference = "2"
                        },
                        new
                        {
                            EventId = 3,
                            EventDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Wedding Reception",
                            EventType = "Celebration",
                            FoodBookingId = 3,
                            ReservationReference = "3"
                        },
                        new
                        {
                            EventId = 4,
                            EventDate = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Charity Fundraiser",
                            EventType = "Fundraising",
                            FoodBookingId = 4,
                            ReservationReference = "4"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuestEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            GuestEmail = "john.doe@example.com",
                            GuestName = "John Doe",
                            GuestPhone = "123-456-7890"
                        },
                        new
                        {
                            GuestId = 2,
                            GuestEmail = "jane.smith@example.com",
                            GuestName = "Jane Smith",
                            GuestPhone = "098-765-4321"
                        },
                        new
                        {
                            GuestId = 3,
                            GuestEmail = "emily.davis@example.com",
                            GuestName = "Emily Davis",
                            GuestPhone = "555-123-4567"
                        },
                        new
                        {
                            GuestId = 4,
                            GuestEmail = "michael.brown@example.com",
                            GuestName = "Michael Brown",
                            GuestPhone = "555-987-6543"
                        },
                        new
                        {
                            GuestId = 5,
                            GuestEmail = "sarah.wilson@example.com",
                            GuestName = "Sarah Wilson",
                            GuestPhone = "555-555-5555"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.Property<int>("GuestBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Attendance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuestBookingId");

                    b.HasIndex("EventId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestBookings");

                    b.HasData(
                        new
                        {
                            GuestBookingId = 1,
                            Attendance = false,
                            EventId = 1,
                            GuestId = 1
                        },
                        new
                        {
                            GuestBookingId = 2,
                            Attendance = true,
                            EventId = 1,
                            GuestId = 2
                        },
                        new
                        {
                            GuestBookingId = 3,
                            Attendance = true,
                            EventId = 2,
                            GuestId = 3
                        },
                        new
                        {
                            GuestBookingId = 4,
                            Attendance = false,
                            EventId = 3,
                            GuestId = 4
                        },
                        new
                        {
                            GuestBookingId = 5,
                            Attendance = true,
                            EventId = 4,
                            GuestId = 5
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstAidTrained")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffName")
                        .HasColumnType("TEXT");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            FirstAidTrained = true,
                            StaffEmail = "alice.johnson@example.com",
                            StaffName = "Alice Johnson"
                        },
                        new
                        {
                            StaffId = 2,
                            FirstAidTrained = false,
                            StaffEmail = "bob.brown@example.com",
                            StaffName = "Bob Brown"
                        },
                        new
                        {
                            StaffId = 3,
                            FirstAidTrained = true,
                            StaffEmail = "charlie.green@example.com",
                            StaffName = "Charlie Green"
                        },
                        new
                        {
                            StaffId = 4,
                            FirstAidTrained = true,
                            StaffEmail = "diana.prince@example.com",
                            StaffName = "Diana Prince"
                        },
                        new
                        {
                            StaffId = 5,
                            FirstAidTrained = false,
                            StaffEmail = "ethan.hunt@example.com",
                            StaffName = "Ethan Hunt"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StaffId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Staffings");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            EventId = 1
                        },
                        new
                        {
                            StaffId = 2,
                            EventId = 1
                        },
                        new
                        {
                            StaffId = 3,
                            EventId = 2
                        },
                        new
                        {
                            StaffId = 4,
                            EventId = 3
                        },
                        new
                        {
                            StaffId = 5,
                            EventId = 4
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("GuestBookings")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Guest", "Guest")
                        .WithMany("GuestBookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("Staffings")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Staff", "Staff")
                        .WithMany("Staffings")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Navigation("GuestBookings");

                    b.Navigation("Staffings");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Navigation("GuestBookings");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Navigation("Staffings");
                });
#pragma warning restore 612, 618
        }
    }
}
